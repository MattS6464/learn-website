---
layout: none
---

<script>
	import { structure, tags } from '$lib/app.js';
	import { goto } from '$app/navigation';
	import stringSimilarity from "string-similarity";

	const routes = $structure.routes.reference;
	let result = routes 
	let searchTerm = '';
	let distances = {};

	function constructDistances() {
		console.log(result)
		result.forEach(r => {
            const comparator = r.data.title.replace(/[^a-zA-Z]+/g, '').toLowerCase();
            r.similarity = stringSimilarity.compareTwoStrings(searchTerm.toLowerCase(), comparator)
        })

        result.sort((a, b) => a.similarity - b.similarity);
        result = result.reverse();
	}


	function doSearch() {
		if (searchTerm === '') {
			result = routes;
		} else {
			constructDistances();

		}
	}
</script>

# Reference

This section of the learn platform outlines each algorithm of the Fluid Corpus Manipulation toolbox. The aim of these outlines is to help you develop a fundamental understanding of the algorithms themselves while also nurturing a musical intuition for how it might be used and applied to creative problems and goals. Use the search box below to search for a specific algorithm.

<input
class='search' 
type='text' 
bind:value={searchTerm} 
placeholder='Search for something here'
on:input={ doSearch }
/>

<div class='list'>
{#each result as r}
	<a href={'/'+r.url}>
		<div class='overview'>
			<div class='title'>
			{ r.data.title }
			</div>
			<div class='blurb'>
			{ r.data.blurb }
			</div>
			{ r.url}
		</div>
	</a>
{/each}
</div>

<style>
	.list {
		display: flex;
		flex-direction: column;
		gap: 1em;
	}
	.title {
		font-weight: bold;
	}
	.blurb {
		color: grey;
	}
    .overview {
        cursor: pointer;
        padding: 0.4em;
        box-shadow: 0 1px 1.5px 2px rgba(0, 0, 0, 0.1);
        background-color: transparent;
		display: block;
    }

    .overview:hover {
        scale: 1.03; /* Everyone Else */
		-webkit-transform:scale(1.03); /* Chrome and Safari */
    }

    .overview-blurb {
        color: grey;
    }

	.search {
		width: 100%;
		height: 2em;
		margin-bottom: 0.5em;
		font-family: var(--overpass);
		font-size: 2em;
	}

	/* Don't inherit the global styles for <a> */
	a {
		color: black;
		text-decoration: none;
	}
	a:hover {
		color: black;
		background: white;
	}

</style>






